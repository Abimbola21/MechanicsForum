@model IEnumerable<MechanicsForum.Models.Problem>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Make new Post", "Create")
</p>
<div id="tbldiv">
  
</div>


<script>
    window.addEventListener("load", function () {

        postData('/Problems/GetAllProblems')
            .then(function (response) {
                console.table(response);

                var tablediv = document.getElementById("tbldiv");
                for (var i = 0; i < response.result.length; i++) {
                    //Create two Inner divs to divide each block of result from the for loop
                    //The first one serves the purpose of having an horizontal rule divide each block
                    var innerdiv1 = document.createElement("div");
                    var innerdiv = document.createElement("div");
                    //define the class of the inner div
                    innerdiv1.setAttribute("class", "problem-summary");
                    //append the inner div to the outer div
                    tablediv.appendChild(innerdiv1);
                    innerdiv1.appendChild(innerdiv);
                    //Summary Text is the Summary of each problem and it will be a link
                    var summarytxt = document.createElement("a");
                    summarytxt.setAttribute("class", "summary");
                    //define where the link routes to when it is clicked
                    summarytxt.setAttribute("href", "/Answers/Details/" + response.result[i].Id);
                    //below variables will hold elements that will store values from our problem result set
                    //var status = document.createElement("div");
                    //status.setAttribute("class", "timeStatus");
                    var post_ModDate = document.createElement("div");
                    //post_ModDate.setAttribute("class", "timeStatus");
                    var statusby = document.createElement("div");
                    //statusby.setAttribute("class", "timeStatus");

                    //assign values to the elements created above
                    summarytxt.innerHTML = response.result[i].Summary;
                    if (response.result[i].Status == 'answered') {
                        statusby.innerHTML =  response.result[i].Status + ' ' + response.result[i].latestAnswerBy;
                    }
                    else {
                        statusby.innerHTML = response.result[i].Status + ' ' + response.result[i].UserId;
                    }                  
                   
                    // var d =  Date(response.result[i].ModifiedDate);
                    //if Modified date is not null, return modified date rather than the posted date
                    //else return posted date
                    if (response.result[i].ModifiedDate != null) {
                        var modified = new Date(response.result[i].ModifiedDate.match(/\d+/)[0] * 1);
                        post_ModDate.innerHTML = new Date(modified.getFullYear(), modified.getDate() - 1, modified.getMonth() + 1, modified.getHours(),
                            modified.getMinutes(), modified.getSeconds());
                    }
                    else {
                        var posted = new Date(response.result[i].PostDate.match(/\d+/)[0] * 1);
                        post_ModDate.innerHTML = new Date(posted.getFullYear(), posted.getDate() - 1, posted.getMonth() + 1, posted.getHours(),
                            posted.getMinutes(), posted.getSeconds());
                    }


                    innerdiv.appendChild(summarytxt);
                    // innerdiv.appendChild(status);
                    innerdiv.appendChild(statusby);
                    innerdiv.appendChild(post_ModDate);
                    
                    var hr = document.createElement("hr");
                    innerdiv1.appendChild(hr);
                }
            })
    });

    function postData(url, data) {
        // Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), // must match 'Content-Type' header
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, cors, *same-origin
            redirect: 'follow', // manual, *follow, error
            referrer: 'no-referrer', // *client, no-referrer
        })
            .then(response => response.json()) // parses response to JSON
    }

</script>

