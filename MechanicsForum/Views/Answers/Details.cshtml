@model MechanicsForum.Models.Answer

<p></p>
<p>
    @if (Request.IsAuthenticated && User.IsInRole("Moderator"))
    {
        <a href="#" class="btn btn-primary btn-lg active " role="button" aria-pressed="true"
           onclick="closeProblem()">Close Problem</a>
    }
</p>

<p style="color:lightgreen" id="probStat" hidden>Successful.</p>
<h2 id="problemSummary"></h2>

<div id="problem-header">

</div> 
<div id="problem-desc">

</div>
<br/>
<div id="problem-info"  class="user-info">

</div>
<div id="comment" >
    <textarea id="txtcomment" rows="5"; cols="50" hidden></textarea>
</div>
<hr />
<div id="answers">
  
</div>
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <form id="fileSelectForm" action="\Answers\SubmitAnswer" method="post" enctype="multipart/form-data">
        <textarea name="AnswerDesc" placeholder="Answer here....." id="answer" class="answertxt" rows="10" cols="1000" required></textarea>
        <label for="desc"></label>
        <div id="filediv">
            <input type="file" name="file1" id="file1" onchange="addFileSelection(this.name);" />
            <span id="x1" style="color:red" onclick="removeFileSelection(this);">X</span>
            <br id="br1" />
        </div>
        <input type="hidden" name="Problem_Id" id="problemId" />
        <p style="color:brown" id="MustLogIn" hidden>You must be logged in to answer questions</p>
        @if (!Request.IsAuthenticated)
        {
            <input type="submit" value="Submit" id="save" onclick="document.getElementById('MustLogIn').hidden = false; return false;" />
        }
        else
        {
            <input type="submit" value="Submit" id="save" />
        }

    </form>

</div>
<p>
    @Html.ActionLink("Back to List", "Index", "Problems")
</p>

<script>
    document.addEventListener("load", loadAnswers());

    function closeProblem() {
        var loc = window.location.href;
        var pid = loc.substring(loc.lastIndexOf('/') + 1, loc.length);
        var p = document.getElementById("probStat");
        postData('/Answers/CloseProblem?id=' + loc.substring(loc.lastIndexOf('/') + 1, loc.length))
            .then(function (response) {
                console.table(response);
                p.hidden = false;
            }).catch (error => console.error(error))
    }


    function loadAnswers() {
        var loc = window.location.href;
        //the expression in the below log statement returns the string after the last / of the url
        //which is stored in the above variable loc.
        console.log(loc.substring(loc.lastIndexOf('/') + 1, loc.length));

        //I created an hidden input element in the form above and assign to it the string after the last / of the url
        // in this case, this is the problem Id of the problem we are examining
        var problemId = document.getElementById("problemId");
        problemId.value = loc.substring(loc.lastIndexOf('/') + 1, loc.length);

        //the function below calls the method GetProblemAnswers in the Answers controller with the id of
        //the problem in question and return all the answers that have been provided to this question
        postData('/Answers/GetProblemAnswers?id=' + loc.substring(loc.lastIndexOf('/') + 1, loc.length))
            .then(function (response) {
                console.table(response);

                //get div of the problem and display the summary
                var problemDiv = document.getElementById("problem-header");
                problemDiv.setAttribute("class", "grid");
                problemDiv.innerHTML = response.result[0].Summary;

                //get div of the problem and display the description
                var pDescDiv = document.getElementById("problem-desc");
                pDescDiv.setAttribute("class", "grid");
                pDescDiv.innerHTML = response.result[0].Description;

                //get div of the problem and display the description
                var pInfoDiv = document.getElementById("problem-info");
                pInfoDiv.setAttribute("class", "grid");
                pInfoDiv.innerHTML = "posted  " + response.result[0].UserId + "<br/>" + new Date(response.result[0].PostDate.match(/\d+/)[0] * 1) + "<br/>";

                //create a button to add comment
                var addcomment = document.createElement("button");
                addcomment.innerHTML = "Add comment";
                addcomment.setAttribute("class", "btn btn-light");
                //append the button to the comment div
                var pComment = document.getElementById("comment");
                pComment.appendChild(addcomment);
                pComment.appendChild(document.createElement("br"));
                pComment.appendChild(document.createElement("br"));
                // once comment button is clicked, unhide text area
                var txtComment = document.createElement("textarea")
                txtComment.setAttribute("rows", "5");
                txtComment.setAttribute("cols", "100");

                addcomment.addEventListener("click", function () {
                    pComment.appendChild(txtComment);

                });


                //loop through answers to the above question and display
                for (var i = 0; i < response.result.length; i++) {
                    var answerDiv = document.getElementById("answers");
                    var eachAnsDiv = document.createElement("div");
                    eachAnsDiv.setAttribute("id", "ansdiv" + i);
                    answerDiv.appendChild(eachAnsDiv);

                    //div for votes up and votes down
                    //append to each answer div
                    var Votesdiv = document.createElement("div");                
                    var UpVote = document.createElement("a");
                    Votesdiv.appendChild(UpVote);
                    var p = document.createElement("p");
                    p.setAttribute("id", "count");
                    p.innerHTML = "0";
                    Votesdiv.appendChild(p);
                    var DownVote = document.createElement("a");
                    Votesdiv.appendChild(DownVote);
                    var imgUp = document.createElement("img");
                    imgUp.setAttribute("src", "/Content/images/UpVote.jpg");
                    imgUp.setAttribute("class", "VotesImg");
                    var imgDown = document.createElement("img");  
                    imgDown.setAttribute("src", "/Content/images/DownVote.jpg");
                    imgDown.setAttribute("class", "VotesImg");
                    var lblUp = document.createElement("label");
                    var lblDown = document.createElement("label");
                    UpVote.setAttribute("href", "");
                    UpVote.appendChild(imgUp);
                    DownVote.setAttribute("href", "");
                    DownVote.appendChild(imgDown);
                    //btnUp.setAttribute("class", "btn btn-light");
                    //btnDown.setAttribute("class", "btn btn-light");
                    //star1.setAttribute("class", "glyphicon glyphicon-thumbs-up");
                    //star1.innerHTML = " Like";
                    //star2.setAttribute("class", "glyphicon glyphicon-thumbs-down");
                    //star2.innerHTML = " Dislike";
                    //btnUp.appendChild(star1);
                    //btnDown.appendChild(star2);

                    var divDesc = document.createElement("div");
                    divDesc.setAttribute("class", "post-text");
                    divDesc.innerHTML = response.result[i].AnswerDesc
                    //div for media posted by user
                    var divMedia = document.createElement("div");
                    divMedia.setAttribute("class", "post-text");
                    divMedia.innerHTML = response.result[i].MediaPath

                    //div for overall info of user who posts answers
                    var userInfo = document.createElement("div");
                    userInfo.setAttribute("class", "user-info");

                   

                    //div for add comment
                    //create a div to house comment button and textarea
                    var btncmtdiv = document.createElement("div");
                    btncmtdiv.setAttribute("id", "cmntId" + i);
                    var btnaddcomnt = document.createElement("button");
                    btnaddcomnt.innerHTML = "Add comment";
                    btnaddcomnt.setAttribute("id", "bcmnt" + i);
                    btnaddcomnt.setAttribute("class", "btn btn-light");
                    btncmtdiv.appendChild(btnaddcomnt);
                    btncmtdiv.appendChild(document.createElement("br"));
                    btncmtdiv.appendChild(document.createElement("br"));
                    //once comment button is clicked, create text area                    
                    btnaddcomnt.addEventListener("click", function () {
                        var btnId = document.getElementById(this.id)
                        var num = btnId.id.replace("bcmnt", "");
                        var txtComnt = document.createElement("textarea")
                        txtComnt.setAttribute("id", "tcmnt" + num);
                        txtComnt.setAttribute("rows", "5");
                        txtComnt.setAttribute("cols", "100");
                        var cmntdiv = document.getElementById("cmntId" + num);
                        cmntdiv.appendChild(txtComnt);
                    });


                    //inner divs in user info div
                    //div for username of the person answering
                    var divBy = document.createElement("div");
                    divBy.setAttribute("class", "user-action-time");
                    //div for date of answer
                    var divAnswerDate = document.createElement("div");
                    divAnswerDate.setAttribute("class", "user-action-time");
                    if (response.result[i].AnsweredBy != null) {
                        divBy.innerHTML = "answer by " + response.result[i].AnsweredBy;
                        divAnswerDate.innerHTML = new Date(response.result[i].AnswerDate.match(/\d+/)[0] * 1);
                    }
                    var hr = document.createElement("hr");
                    //append votes button here
                    eachAnsDiv.appendChild(divDesc);
                    if (response.result[i].AnswerDesc!=null) {
                        divDesc.appendChild(Votesdiv);
                        eachAnsDiv.appendChild(btncmtdiv); 
                    }
                   eachAnsDiv.appendChild(userInfo);         
                 
                   
                    userInfo.appendChild(divBy);
                    userInfo.appendChild(divAnswerDate);
                    eachAnsDiv.appendChild(hr);
                }

            }).catch(error => console.error(error))
    }
    //end load answers


    function postData(url, data) {
        // Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), // must match 'Content-Type' header
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, cors, *same-origin
            redirect: 'follow', // manual, *follow, error
            referrer: 'no-referrer', // *client, no-referrer
        })
            .then(response => response.json()) // parses response to JSON
    }
    /* This function recieves a name (string) and finds that element in the document, then removes it from it's parent node.
     * You have to use the removeChild method on the parent node of the object.
     */
    function removeElement(name) {
        var elementToRemove = document.getElementById(name);
        elementToRemove.parentNode.removeChild(elementToRemove);
    }
    /* This function recieves a name (string) and attempts to find it in the document object.  it's going to increment the number at the end
     * of the name and create a new object, but only if that object doesn't already exist.
     * It adds three elements, a file input, a red X inside a span tag, and a break tag
     */
    function addFileSelection(name) {
        // skip the "file" part of the name and grab the number that is the rest
        newID = (parseInt(name.substring(5, name.length - 1)) + 1);
        //check to see if the next increment of that object already exists
        if (document.getElementById("file" + newID) == null) {
            //get the div element housing the input files so you have a reference to add child to for the three object to create
            var divElmt = document.getElementById("filediv");
            // create the new input file object
            var input = document.createElement("input");
            input.type = "file";
            var newName = "file" + newID;
            input.name = newName;
            input.id = newName;
            // this is the hard part.  anonymous function that calls the addFileSelection function and passes it the name
            input.addEventListener("change", function () {
                addFileSelection(this.name);
            });
            divElmt.appendChild(input);
            //create the new span tag with the red X in it
            var spanObj = document.createElement("span");
            spanObj.id = "x" + newID;
            spanObj.style = "color:red";
            spanObj.addEventListener("click", function () {
                removeFileSelection(this);
            })
            spanObj.innerHTML = "X";
            divElmt.appendChild(spanObj);
            //create the break tag to make a new line.  have to add an id so we know which one to remove when they click the X
            var newBR = document.createElement("br");
            newBR.id = "br" + newID;
            divElmt.appendChild(newBR);
        }
    }
    /* This function removes the file, span, and br tags with the same number at the end
     */
    function removeFileSelection(o) {
        var elementIdNumber = parseInt(o.id.substring(2, o.id.length - 1));
        var elementToDelete = document.getElementById("file" + elementIdNumber);
        if (elementToDelete.files.length > 0) {
            removeElement("file" + elementIdNumber);
            removeElement("x" + elementIdNumber);
            removeElement("br" + elementIdNumber);
        }

    }
</script>
