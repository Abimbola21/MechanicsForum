<body id="mybody">
    <br />
    <h4>Create a new account.</h4>
    <hr />
    <div class="form-group">
        <label class="col-md-2 control-label" for="UserName">Username </label>
        <div class="col-md-10">
            <input type="text" name="UserName" id="UserName" required />
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label" for="Email">Email </label>
        <div class="col-md-10">
            <input type="text" name="Email" id="Email" required/>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label" for="Password">Password </label>
        <div class="col-md-10">
            <input type="password" name="Password" id="Password" required/>
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label" for="Password">Confirm Password </label>
        <div class="col-md-10">
            <input type="password" name="ConfirmPassword" id="ConfirmPassword" required />
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label" for="Role">Role</label>
        <div class="col-md-10" id="Roles">

        </div>
    </div>

    <button id="submit">Submit</button>
    <div id="x" style="color:red;"></div>


    <script>
        //add event listener to body to populate my roles when it loads
        var body = document.getElementById("mybody");
        document.addEventListener("load", loadRoles());

        function loadRoles() {
            postData('/AspNetUsers/GetRoles')
                .then(function (response) {
                    console.table(response);

                  var roleList = document.getElementById("Roles");
                  var select = document.createElement("select");
                  select.id = "RoleSelected";

                    roleList.appendChild(select);

                    for (var i = 0; i < response.result.length; i++) {
                        var option = document.createElement("option");
                        option.text = response.result[i].Name;
                        option.value = response.result[i].Name;
                        select.add(option);
                        
                    }
                }).catch(error => console.error(error))
        }

        var submit = document.getElementById("submit");
        if (submit) {
            submit.addEventListener("click", function () {
                var data = new Object();
                var confirmPassword = document.getElementById("ConfirmPassword").value;
                var password = document.getElementById("Password").value;
               
                data.UserName = document.getElementById("UserName").value;
                data.Email = document.getElementById("Email").value;
                if (password != confirmPassword)
                {
                    document.getElementById("x").innerHTML = "Passwords do not match";
                }
                data.Password = password; 
                data.Roles = document.getElementById("RoleSelected").value;

                postData('/AspNetUsers/Create', data)
                    //  .then(data => console.table(data)) // JSON from `response.json()` call
                    //.then(function (data) { if (data.Errors) { var x = document.getElementById("x"); x.innerHTML = data.Errors.value; }})
                    .then(data => handleError(data))
                    .catch(error => console.error(error))

            });
            function handleError(data) {
                console.table(data);
                if (data.Errors) {
                    document.getElementById("x").innerHTML = data.Errors;
                }
                else {
                    window.location= "/Home";
                }
            }
        }
 

        function postData(url, data) {
            // Default options are marked with *
            return fetch(url, {
                body: JSON.stringify(data), // must match 'Content-Type' header
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, same-origin, *omit
                headers: {
                    'user-agent': 'Mozilla/4.0 MDN Example',
                    'content-type': 'application/json'
                },
                method: 'POST', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, cors, *same-origin
                redirect: 'follow', // manual, *follow, error
                referrer: 'no-referrer', // *client, no-referrer
            })
                .then(response => response.json()) // parses response to JSON
        }

    </script>
</body>